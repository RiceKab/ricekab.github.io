.. ffmpeg_cut documentation master file, created by
   sphinx-quickstart on Sun Sep  1 13:47:01 2019.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Cutting videos with ffmpeg
==========================

This short guide describes how to cut videos using ffmpeg, a command line tool to
manipulate audio and video streams. This guide will be assuming you are running
on Windows for the examples.

Commands that are entered in your terminal will be shown in blocks like so:

.. code:: bat

    C:\CurrentDirectory> command to type
    
    Output of the command
    
Note the caret (>) symbol for where you have to enter commands.

Example scenario
----------------

We're going to use the following example for this document. We will have a video we want to cut in
:code:`C:\videos\raw\smashvod.flv` and we want to write the cut version in :code:`C:\videos\cut\smashvod_cut.flv`.
    
Getting ffmpeg
--------------

You can find Windows builds for ffmpeg here: https://ffmpeg.zeranoe.com/builds/ .
Download the zip archive that corresponds to your setup (most likely Windows 64 bit) with
Static linking. This should be the default selected build.

We are only interested in the `bin` directory within that zip, extract the contents from
`bin` to :code:`C:\videos`. Your folder structure should look something like this now:

.. code::

    C:\videos
      |-- raw
        |-- smashvod.flv
      |- cut
        |-- <empty directory>
      |-- ffmpeg.exe
      |-- ffplay.exe
      |-- ffprobe.exe

Working in the terminal
-----------------------

You can open a terminal / command prompt in several ways.

* You can look for "Command Prompt" and run it.
* You can press WIN + R to open the run windows, then use :code:`cmd` and press OK.
* You can type :code:`cmd` in the navigation bar in explorer to open it in that directory.

Once you have it open, navigate to the videos folder:

.. code:: bat

    C:\Users\myuser> cd C:\videos
    C:\videos>

Confirm that you can use ffmpeg with either of the following:

.. code:: bat

    C:\videos> ffmpeg --version
    
    [Version output]
    
    # OR
    
    C:\videos> where ffmpeg
    
    C:\videos\ffmpeg.exe
    

.. note::

    If you get an error along the lines of :code:`'ffmpeg' is not recognized as an internal or external [...]`,
    check if `ffmpeg.exe` is in the correct location.

    
Cutting video
-------------

The basic structure of a simple cut command is (the order of the options is important!):

.. code:: bat

    C:\videos> ffmpeg -ss <start_in_seconds> -i <input_file> -to <end_timestamp> -codec copy <output_file>

For our example, let's say we want to cut off the first 10 seconds and cut off everything after 10 minutes.
The command for this would be:

.. code:: bat

    C:\videos> ffmpeg -ss 10 -i raw\smashvod.flv -to 00:09:50 -codec copy cut\smashvod_cut.flv
    
Note that the :code:`-to` only goes until 09:50 instead of 10 minutes. This is because after cutting the first 10 seconds,
the 10 minute mark is now at 09:50 when the -to processes the video.

.. note::

    This isn't exactly correct and is related to the order of the options provided, but that's an unecessary
    detail for this guide.


    
Accessing ffmpeg from anywhere
------------------------------

You may want to be able to call :code:`ffmpeg` from anywhere, in order to do this you can add it to your PATH.
If this is something you want just message me on Discord or look it up online.
